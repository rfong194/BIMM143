---
title: "Class13"
author: "Ryan Fong"
format: pdf
---
# Section 1. Differential Expression Analysis

The countdata and coldata will be downloaded and imported

```{r}
colData <- read.csv("GSE37704_metadata.csv", row.names =1)
head(colData)
```

```{r}
countData <- read.csv("GSE37704_featurecounts.csv", row.names=1)
head(countData)
```

The first unwanted column "length" will be removed in Countdata

```{r}
counts <- countData[,-1]
head(counts)
```

```{r}
colnames(counts)==rownames(colData)
```

DESeq2 is now loaded and used
```{r}
library(DESeq2)
```

```{r}
dds<-DESeqDataSetFromMatrix(countData=counts,
colData=colData,
design=~condition)
```

```{r}
dds<-DESeq(dds)
```

```{r}
res <- results(dds)
```

>Q. Complete the code below to remove the troublesome first column from countData

```{r}
countData <- as.matrix(countData[,-1])
head(countData)
```

>Q. Complete the code below to filter countData to exclude genes (i.e. rows) where we have 0 read count across all samples (i.e. columns).
Tip: What will rowSums() of countData return and how could you use it in this context?

```{r}
to.keep<- rowSums(counts)>0
counts<- counts[to.keep,]
head(counts)
```


>How many genes do we have left?

```{r}
nrow(counts)
```

DESeq2 is now loaded and used
```{r}
library(DESeq2)
```

```{r}
dds<-DESeqDataSetFromMatrix(countData=counts,
colData=colData,
design=~condition)
```

```{r}
dds<-DESeq(dds)
```

```{r}
res <- results(dds)
```

>Q. Call the summary() function on your results to get a sense of how many genes are up or down-regulated at the default 0.1 p-value cutoff.


```{r}
summary(res$padj>0.01)
```

A volcano plot is made

```{r}
res = results(dds, contrast=c("condition", "hoxa1_kd", "control_sirna"))
plot( res$log2FoldChange, -log(res$padj) )
```

>Q. Improve this plot by completing the below code, which adds color and axis labels

```{r}
# Make a color vector for all genes
mycols <- rep("gray", nrow(res) )
# Color red the genes with absolute fold change above 2
mycols[ abs(res$log2FoldChange) > 2 ] <- "blue"
# Color blue those with adjusted p-value less than 0.01
# and absolute fold change more than 2
inds <- (res$padj>0.01) & (abs(res$log2FoldChange) > 2 )
mycols[ inds ] <- "red"
plot( res$log2FoldChange, -log(res$padj), col=mycols, xlab="Log2(FoldChange)", ylab="-Log(P-value)" )
```

>Q. Use the mapIDs() function multiple times to add SYMBOL, ENTREZID and GENENAME annotation to our results by completing the code below.

```{r}
library("AnnotationDbi")
library("org.Hs.eg.db")

columns(org.Hs.eg.db)

res$symbol = mapIds(org.Hs.eg.db,
                    keys=rownames(res), 
                    keytype="ENSEMBL",
                    column="SYMBOL",
                    multiVals="first")
res$entrez = mapIds(org.Hs.eg.db,
                    keys=rownames(res),
                    keytype="ENSEMBL",
                    column="ENTREZID",
                    multiVals="first")
head(res, 10)
```



>Q. Finally for this section let's reorder these results by adjusted p-value and save them to a CSV file in your current project directory.

```{r}
res = res[order(res$pvalue),]
write.csv(res, file="deseq_results.csv")
```

# Section 2. Pathway Analysis

```{r}
library(gage)
library(gageData)

data(kegg.sets.hs)
data(sigmet.idx.hs)

# Focus on signaling and metabolic pathways only
kegg.sets.hs = kegg.sets.hs[sigmet.idx.hs]

# Examine the first 3 pathways
head(kegg.sets.hs, 3)
```

```{r}
foldchanges = res$log2FoldChange
names(foldchanges) = res$entrez
head(foldchanges)
```

```{r}
# Get the results
keggres = gage(foldchanges, gsets=kegg.sets.hs)
head(keggres$less, 5)
```

```{r}
library(pathview)
```

```{r}
pathview(gene.data=foldchanges, pathway.id="hsa04110")
```
![ image](hsa04110.pathview.png)
```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$greater)[1:5]

# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```

```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```

![ image](hsa04640.pathview.png)

![ image](hsa04630.pathview.png)
![ image](hsa00140.pathview.png)
![ image](hsa04142.pathview.png)
![ image](hsa04330.pathview.png)

>Q. Can you do the same procedure as above to plot the pathview figures for the top 5 down-reguled pathways?

```{r}
## Focus on top 5 upregulated pathways here for demo purposes only
keggrespathways <- rownames(keggres$less)[1:5]
# Extract the 8 character long IDs part of each string
keggresids = substr(keggrespathways, start=1, stop=8)
keggresids
```

```{r}
pathview(gene.data=foldchanges, pathway.id=keggresids, species="hsa")
```
![ image](hsa03440.pathview.png)
# Section 3. Gene Ontology (GO)
![ image](hsa03030.pathview.png) 
![ image](hsa03013.pathview.png)
![ image](hsa04114.pathview.png)
```{r}
data(go.sets.hs)
data(go.subs.hs)

# Focus on Biological Process subset of GO
gobpsets = go.sets.hs[go.subs.hs$BP]

gobpres = gage(foldchanges, gsets=gobpsets, same.dir=TRUE)

lapply(gobpres, head)
```

# Section 4. Reactome Analysis

```{r}
sig_genes <- res[res$padj <= 0.05 & !is.na(res$padj), "symbol"]

print(paste("Total number of significant genes:", length(sig_genes)))
```

```{r}
write.table(sig_genes, file="significant_genes.txt", row.names=FALSE, col.names=FALSE, quote=FALSE)
```

>Q: What pathway has the most significant “Entities p-value”? Do the most significant pathways listed match your previous KEGG results? What factors could cause differences between the two methods?

The Endosomal/Vacuolar pathway has the most significant"Entities p-value". The most significant pathways listed does have some match to the previous KEGG results. Factors that cause differences between the 2 methods is the data for each pathway that were given and what is recognized significant depending on the method.



